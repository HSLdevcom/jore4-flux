stage: e2e
fluxSyncEnabled: false
limitRanges:
  # github runners have limited CPU and memory
  memory:
    default: 512Mi
    defaultRequest: 128Mi
  cpu:
    default: 1
    defaultRequest: 0.05
ingress:
  type: nginx
  hostname: ""
  routes:
    # note that all these are rewritten to /$2 (so using the second regexp capture group without prefix)
    # note that these rules are evaluated in order, UI service is used as fallback for any unrecognized routes

    # note the (/|$) allows the url to terminate after "graphql" or continue with a "/"
    - path: /api/graphql(/|$)(.*)
      serviceName: hasura
      servicePort: 8080
    # note the (/|$) allows the url to terminate after "auth" or continue with a "/"
    - path: /api/auth(/|$)(.*)
      serviceName: auth
      servicePort: 8080
    # note the first () will be an empty capture group
    - path: /()(.*)
      serviceName: ui
      servicePort: 80
microServices:
  hasura:
    env:
      HASURA_GRAPHQL_ENABLE_CONSOLE: "false"
    localSecrets:
      db-hostname: jore4-testdb
      db-name: postgres
      db-username: postgres
      db-password: postgres
      hasura-admin-secret: hasura
      db-auth-username: postgres
  auth:
    env:
      SELF_PUBLIC_BASE_URL: "http://localhost:3300"
      LOGINPAGE_URL: "http://localhost:3300"
      LOGOUTPAGE_URL: "http://localhost:3300"
      OIDC_PROVIDER_BASE_URL: "https://hslid-dev.t5.fi"
    secretMappings: ""
    localSecrets:
      oidc-client-id: "0838619941439007"
      oidc-client-secret: "9uV5p45F6IZQubCErBiquZYaL7Wm2AWM"
      db-hostname: jore4-testdb
      db-name: postgres
      db-username: postgres
      db-password: postgres
  testdb:
    serviceName: "testdb"
    serviceType: "NodePort"
    dockerImage: "postgis/postgis:12-3.1-alpine"
    ports:
      - containerPort: 5432
        nodePort: 30432
        localPort: 6432
    env:
      POSTGRES_DB: jore4e2e
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
