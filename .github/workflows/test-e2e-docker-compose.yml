name: Test e2e docker-compose setup

on:
  push:
    branches:
      # pull request branches created by auto updater
      - "autoupdate/**"
  pull_request:
    branches: [main]

jobs:
  e2e-docker-compose-setup:
    name: e2e setup with docker-compose
    runs-on: ubuntu-20.04

    strategy:
      matrix:
        include:
          # start all services
          - services: [""]
          # start only ui, auth backend and hasura, no ingress proxy
          # auth needs testdb for storing session data and hasura to run its migrations
          - services:
              [
                "jore4-ui",
                "jore4-auth",
                "jore4-hasura",
                "jore4-mbtiles",
                "jore4-testdb",
              ]
          # start only ui, auth backend, with ingress proxy
          - services: ["jore4-ui", "jore4-proxy"]

          # start only test databases and jore3 importer + hasura for running migrations
          - services:
              [
                "jore4-testdb",
                "jore4-hasura",
                "jore4-mssqltestdb",
                "jore4-jore3importer",
              ]

          # start only mapmatching database and service
          - services: ["jore4-mapmatchingdb", "jore4-mapmatching"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Retrieve branch name
        uses: HSLdevcom/jore4-tools/github-actions/extract-metadata@extract-metadata-v1

      - name: Setup docker-compose with the parameterized services
        run: |
          docker-compose -f clusters/docker-compose/docker-compose.yml up -d ${{ join(matrix.services, ' ') }}

      - name: Verify that UI is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-ui') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3302 --output /dev/null --silent"

      - name: Verify that UI is up and running through proxy
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-ui') && contains(matrix.services, 'jore4-proxy') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3300 --output /dev/null --silent"

      - name: Verify that postgresql is up and running
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-testdb') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "pg_isready -h localhost -p 6432"
          # it takes a while for the database to start
          retries: 50

      - name: Verify that mssql testdb is up and running
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mssqltestdb') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        env:
          SA_PASSWORD: "P@ssw0rd"
        with:
          command: 'sqlcmd -S 127.0.0.1 -U sa -P "$SA_PASSWORD" -d master -Q "SELECT ''OK'';"'
          # it may take a while for the database to start
          retries: 50

        # on some rare occasions unfortunately this is failing...
      - name: Debug on failure
        if: ${{ failure() }}
        run: |
          docker logs mssqltestdb || echo "no mssql container"

      - name: Verify that hasura is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-hasura') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3201/healthz --output /dev/null --silent"

      - name: Verify that hasura is up and running through proxy
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-hasura') && contains(matrix.services, 'jore4-proxy') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3300/api/graphql/healthz --output /dev/null --silent"

      - name: Verify that auth backend is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-auth') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3200/actuator/health --output /dev/null --silent"

      - name: Verify that auth backend has access to database
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-auth') }}
        with:
          command: "curl --fail http://localhost:3200/public/v1/login --output /dev/null --silent"

      - name: Verify that auth backend is up and running through proxy
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-auth') && contains(matrix.services, 'jore4-proxy') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3300/api/auth/actuator/health --output /dev/null --silent"

      - name: Verify that mbtiles server is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mbtiles') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3203/services --output /dev/null --silent"

      - name: Verify that mbtiles server is up and running through proxy
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mbtiles') && contains(matrix.services, 'jore4-proxy') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3300/api/mbtiles/services --output /dev/null --silent"

      - name: Verify that jore3 importer is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-jore3importer') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3004/actuator/health --output /dev/null --silent"

      - name: Verify that map matching database is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mapmatchingdb') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "pg_isready -h localhost -p 6433"

      - name: Verify that map matching server is up and running standalone
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mapmatching') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3005/actuator/health --output /dev/null --silent"

      - name: Verify that map matching server is up and running through proxy
        if: ${{ matrix.services[0] == '' || contains(matrix.services, 'jore4-mapmatching') && contains(matrix.services, 'jore4-proxy') }}
        uses: HSLdevcom/jore4-tools/github-actions/healthcheck@healthcheck-v1
        with:
          command: "curl --fail http://localhost:3300/api/route/actuator/health --output /dev/null --silent"

      - name: Verify that all containers are healthy
        run: '[ -z "$(docker ps -q --filter health=unhealthy)" ]'
